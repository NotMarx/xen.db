{"meta":{"generator":"0.9.0","format":20,"date":1631442494394},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# Xen.db\r\n\r\n[![downloadsBadge](https://img.shields.io/npm/dt/xen.db?color=7289DA&label=Total%20Downloads&logo=Xen.db&style=for-the-badge)](https://www.npmjs.com/package/xen.db)\r\n[![versionBadge](https://img.shields.io/npm/v/xen.db?color=7289DA&label=Version&logo=Xen.db&style=for-the-badge)](https://www.npmjs.com/package/xen.db)\r\n[![docs](https://img.shields.io/badge/Documentation-Click%20here-7289DA?style=for-the-badge)](https://xendb.js.org)\r\n\r\n[Xen.db](https://www.npmjs.com/package/xen.db) is an open-sourced SQLite3 Database designed to be easy-to-use and beginner friendly. This Database access and store various of data persistently via [BetterSQLite3](https://github.com/JoshuaWise/better-sqlite3).\r\n\r\n### Features\r\n\r\n- **Powerful** - Supports **Non-Xen.db** Method.\r\n- **Customizable** - More Utility Method.\r\n- **Family-Friendly** - Simple & Easy-To-Use For Beginners.\r\n- **100% Based** - Key Value Based.\r\n- **Persistent Database** - Value Will Not Lost When On Retstarting Session.\r\n- **Free-To-Use** - Not Needed To Set Up A SQL Database Server! All Data Is Stored Locally In The Same Project.\r\n- **Custom Database File** - **Xen.db** Allow Users To Create Custom Database File And Its Path!\r\n\r\n---\r\n\r\n# Example (Default)\r\n\r\nCoding A Sandbox (Demo)\r\n\r\n```js\r\n\r\nconst { Database } = require(\"xen.db\");\r\nconst db = new Database(); \r\n\r\n// Setting an object in the database:\r\ndb.set('userInfo', { difficulty: 'Easy' });\r\n// -> { difficulty: 'Easy' }\r\n \r\n// Pushing an element to an array (that doesn't exist yet) in an object:\r\ndb.push('userInfo.items', 'Sword');\r\n// -> { difficulty: 'Easy', items: ['Sword'] }\r\n \r\n// Adding to a number (that doesn't exist yet) in an object:\r\ndb.add('userInfo.balance', 500);\r\n// -> { difficulty: 'Easy', items: ['Sword'], balance: 500 }\r\n \r\n// Repeating previous examples:\r\ndb.push('userInfo.items', 'Watch');\r\n// -> { difficulty: 'Easy', items: ['Sword', 'Watch'], balance: 500 }\r\ndb.add('userInfo.balance', 500);\r\n// -> { difficulty: 'Easy', items: ['Sword', 'Watch'], balance: 1000 }\r\n \r\n// Fetching individual properties\r\ndb.get('userInfo.balance'); // -> 1000\r\ndb.get('userInfo.items'); // ['Sword', 'Watch']\r\n\r\n```\r\n\r\n# Example (Custom)\r\n\r\n```js\r\n\r\nconst { Database } = require(\"xen.db\");\r\nconst db = new Database(\"Database/xen.db\", { path: \"Database\", table: \"JSON\"});\r\n// Creates a Database File called \"xen.db\" inside a \"Database\" folder instead of \"json.sqlite\"\r\n\r\n// Setting an object in the database:\r\ndb.set('userInfo', { difficulty: 'Easy' });\r\n// -> { difficulty: 'Easy' }\r\n \r\n// Pushing an element to an array (that doesn't exist yet) in an object:\r\ndb.push('userInfo.items', 'Sword');\r\n// -> { difficulty: 'Easy', items: ['Sword'] }\r\n \r\n// Adding to a number (that doesn't exist yet) in an object:\r\ndb.add('userInfo.balance', 500);\r\n// -> { difficulty: 'Easy', items: ['Sword'], balance: 500 }\r\n \r\n// Repeating previous examples:\r\ndb.push('userInfo.items', 'Watch');\r\n// -> { difficulty: 'Easy', items: ['Sword', 'Watch'], balance: 500 }\r\ndb.add('userInfo.balance', 500);\r\n// -> { difficulty: 'Easy', items: ['Sword', 'Watch'], balance: 1000 }\r\n \r\n// Fetching individual properties\r\ndb.get('userInfo.balance'); // -> 1000\r\ndb.get('userInfo.items'); // ['Sword', 'Watch']\r\n\r\n```\r\n\r\n---\r\n\r\n# Creating A Table\r\n\r\n```js\r\n\r\n// Creates New Table\r\nconst table = db.createTable(\"MyTable\");\r\n\r\ndb.set(\"Inv\", \"Sword\");\r\ntable.set(\"Inv\", \"Diamond\");\r\n\r\ndb.get(\"Inv\");\r\n// -> Sword\r\n\r\ntable.get(\"Inv\");\r\n// -> Diamond\r\n\r\n```\r\n\r\n---\r\n\r\n# List All Tables\r\n\r\n```js\r\n\r\nconst tables = db.tables();\r\n\r\nconsole.log(tables);\r\n\r\n```\r\n\r\n---\r\n\r\n# Why Xen.db?\r\n\r\n- **Lightweight**\r\n- **Consistent**\r\n- **Easy-To-Use**\r\n- **Customizable**\r\n- **Key & Value Based**\r\n- **Persistent Database**\r\n\r\nWe've Over ***2,000+*** Downloads On **NPM**!   \r\n\r\nCheck Out Our [GitHub](https://github.com/NotMarx/Xen.db) For Contributions!\r\n\r\n---\r\n\r\n# Installation\r\n\r\nIf You Have Trouble Installing **Xen.db**. Please Follow This [Troubleshooting Guide](https://github.com/JoshuaWise/better-sqlite3/blob/master/docs/troubleshooting.md).\r\n\r\n##### Windows Platform\r\n\r\n1. **Open**: Any Terminal (Eg. PowerShell, Command Prompt)\r\n2. **Run**: `npm i xen.db`\r\n\r\n- If you want to be more updated, you can install the dev version instead: `npm i NotMarx/xen.db#dev`\r\n\r\n**Note:** Windows Users Might Need To Do The Following [Additional Steps](https://github.com/JoshuaWise/better-sqlite3/blob/master/docs/troubleshooting.md).\r\n\r\n##### Mac Platform\r\n\r\n1. **Install**: XCode\r\n2. **Run**: `npm i -g node-gyp` In Your Console Or Terminal\r\n3. **Run**: `node-gyp --python /path/to/python2.7` \r\n4. **Finally, Run**: `npm i xen.db`\r\n\r\n---\r\n\r\n# Documentation\r\n\r\n- Please [Click Here](https://xendb.js.org) For **Xen.db** Documentation!\r\n\r\n---\r\n\r\n- If You Need Help, Please Join Our [Support Server](https://discord.gg/78RyqJK) And Ask In The [#xen-db](https://discord.com/channels/750546490614743150/756354697077719100) Channel.\r\n\r\n\r\n\r\n","path":"README.md"}}}},"classes":[],"interfaces":[],"typedefs":[],"externals":[]}